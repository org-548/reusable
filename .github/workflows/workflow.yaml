name: ECR build-push

on: 
  workflow_call:
    inputs:
      app_unit:
        type: string
        required: true
      ecr-repo-name:
        type: string
        required: true
      values-file:
        type: string
        required: true
    secrets:
      github_pat:
        required: true
      
jobs:
  ECR-build-push:
    name: first-workflow
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Git 
        shell: bash
        run: |
          echo "Git setup"
          git config --global user.name 'Tereza'
          git config --global user.email 'bisharyant@gmail.com'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::637423489195:role/${{ vars.OIDC_ROLE_NAME }}
          aws-region: eu-north-1

      - name: Inject api-url in appropriate file
        if: ${{ inputs.app_unit == 'client' }}
        run: |
          aws elb describe-load-balancers > out.json
          export API_URL=$(jq -r '.[] | .[] | .DNSName' out.json)
          envsubst < index.htm > index.html    

      - name: Get short SHA
        run: |
          echo "SHORT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2      

      - name: Build, tag and push image to AWS ECR
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr-repo-name }}
          IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: |
          echo ${{ env.SHORT_SHA }}
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          repository: org-548/infra
          path: infra
          token: ${{ secrets.github_pat }}    

      - name: Update tag in appropriate values.yaml file
        working-directory: infra/charts/values
        run: |
          echo ${{ env.SHORT_SHA }}
          if [[ "$(yq eval .deploy.image.tag ${{ vars.values_file }})" != "${{ env.SHORT_SHA }}" ]]; then
            sed -E -i'' "s/(.*tag: ).*/\1${{ env.SHORT_SHA }}/" '${{ vars.values_file }}'
          fi
          
      - name: Commit and push changes
        shell: bash
        working-directory: infra/charts/values
        env:
          GITHUB_TOKEN: ${{ secrets.github_pat }}
          COMMIT_MESSAGE: "Update image-tag with ${{ env.SHORT_SHA }}"
        run: |
          if [[ `git status --porcelain --untracked-files=no` ]]; then
            echo "Commit and push to second repo"
            git add .
            git commit -m "${{ env.COMMIT_MESSAGE }}"
            git push
          else
            echo "No changes"
            exit 0
          fi

          
